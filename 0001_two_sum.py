from typing import List


class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        # direct sequence - easiest solution
        for x in range(len(nums)):
            for y in range(len(nums)-x-1):
                if nums[x] + nums[y+x+1] == target:
                    print(f"1:{nums[x]}, 2:{nums[y+x+1]}")
                    return [x, y+x+1]
        return []

    def twoSum2(self, nums: List[int], target: int) -> List[int]:
        """This algorithm uses sorting before the start and step/2 reducing
             with a transition to a decrease by 1 after step=5

        Args:
            nums (List[int]): array of integers
            target (int): an integer

        Returns:
            List[int]: indices of the two numbers such that they add up to target.
        """

        nums2 = sorted(nums)

        for x in range(len(nums2)):

            check_position = x
            current_position = last_position = len(nums) - 1
            step = last_position - x

            while check_position != current_position:
                check = nums2[x] + nums2[current_position]
                if check == target:
                    print(f"1:{nums2[x]}, 2:{nums2[current_position]}")
                    Vb = nums2[current_position]
                    a = nums.index(nums2[x])
                    b = nums.index(Vb)
                    if a == b:  # if we found the same equals values, for example 3 and 3
                        b = nums[a+1:].index(Vb) + a + 1
                    return [a, b]
                else:
                    check_position = current_position
                    # step/2 reducing with a transition to a decrease by 1 after step=5
                    step = (step - 1) if step <= 5 else int(step / 2)

                    if check < target:
                        current_position = current_position + step
                        if current_position >= len(nums2):
                            break
                    else:
                        current_position = current_position - step
                        if current_position == x:
                            break
                    last_position = check_position
        return []


solution = Solution()

nums = [5, 7, 11, 18, 24, 38, 48]
target = 31

nums = [-10, -1, -18, -19]
target = -19
nums = [3, 3]
target = 6
nums = [-3, 4, 3, 90]
target = 0

nums = [-1, -2, -3, -4, -5]
target = -8
nums = [3, 2, 3]
target = 6

# nums = [-2489365, -993808, 7677553, -6236212, 4790337, 7644796, -17608, -5925223, 1001245, -460212, 653772, 5293761, 3423463, 7887896, 6682993,
#         -7160383, -8961165, -4427439, -292075, -7135767, 4083793, -6960662, 8142868, -
#         4240394, 8025016, -2556360, 2350768, -4461693, -4560806, -3584319,
#         -260547, 7555881, 5425240, -4005238, 1884863, -1542675, -7228114, -
#         1569944, 1127787, 2957411, -1242460, 8952147, -
#         4274786, -3547360, -2021990, 3996052,
#         -5990652, -2548871, -5738166, 2898644, -3621230, -8941983, -
#         2947855, 6725035, 4132935, 2365022, -
#         779089, 7301765, 7592999, 1348187, 5460485, -6122562,
#         6040748, 4998516, 1711224, 2502134, -3494412, 1734467, -2483280, -5130317, -
#         172673, 5886671, -7923584, 337280, 3523150, 7822530, -6359601, 3438172, 1810201,
#         6740543, -6990467, -8944667, 107690, 4556956, 6905123, 6842712, 7038959, -
#         1623617, 5486272, 133419, -3934378, -888166, 4176021, 7922519, 5245309, 9130043,
#         8978076, 8808437, 8416577, 4767255, -7278336, -8728641, -9003137, -
#         9503175, 5550490, 8968777, 1768371, 7942934, 9782721, -
#         5302342, -3076168, 3328396, -4620783,
#         -3322865, 1164363, 4994489, 7320876, 4031038, -2036888, 5034601, -9098927, -
#         9056762, -9827598, -2762269, -7689012, 7127061, 4020330, 6512128, -1156246, 3571495,
#         5388307, -4969113, 2118509, 5411790, -9655083, -572819, -4186494, 7775941, 478500, -
#         8289896, 3328444, 4329332, 4091188, -5611161, -2027703, 4289457, -7329518,
#         -9739740, 6560991, 9112308, 2164824, -8818714, 7239204, -5603429, -5659909, -
#         8668315, -1874581, -5978467, 5705017, 651321, 747667, 7180173, 8158904, -6695904,
#         9732873, 4714316, 1865646, -1738344, -
#         442627, 8001906, 366162, 7747907, 1328022, 3241603, 7556153, 9977970, 4545917, 433814, 5136053, 6971048, -1483172, 9258771,
#         -2769108, 2495273, 3170658, -7277004, -2903161, -5104774, -5831707, -9250574, -
#         4276957, 664375, -8734748, -3773330, -
#         5538367, 4637853, -932667, 6308513, -3599717,
#         -3201277, -1702967, -4275762, -9321013, 2276903, -7321002, -7787434, 1793680, -
#         2797948, -1421363, 1819511, 4398558, 6193158, -
#         9003006, 5047133, 7630486, 1308811,
#         -3001765, -6857856, 8649103, 2216541, 724938, -5524269, -1623261, 8654301, -
#         6057258, 5861629, -5032170, -6895815, -
#         1003619, -2450585, 2544057, 6390889, 4655893,
#         194459, -2940491, -9399918, -2225728, 6667900, 6731612, -2019387, -410708, 7226727, -
#         6954899, 5162041, 4600893, -9684418, 7979363, 3272380, 2640858, -3424552,
#         -9430055, -4546570, -3273081, -1684766, 9237395, -6489178, 1425283, -2230845, 351271, -
#         4355198, -2924300, 877195, -13620, -5765150, 4715114, 7839148, 8982768,
#         2223961, 9345644, -3263152, 7617224, 6533515, 2881695, 5836797, -7156020, -
#         2440178, 2364641, -6990073, 8994440, 5422913, -
#         7575952, -2922731, 5926480, -7758037,
#         3850264, 1040662, -6126638, 4972693, 7217650]
# target = -3483173

nums = [2, 5, 5, 11]
target = 10

print(solution.twoSum2(nums, target))
